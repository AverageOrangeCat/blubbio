datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id              Int             @id @default(autoincrement())
  username        String          @unique
  email           String          @unique
  password        String
  countryCode     String?
  country         String?
  pbUrl           String?         
  bannerUrl       String?          
  inputSettings   String?
  LastDisconnectedAt  DateTime?        
  createdAt       DateTime        @default(now())
  updatedAt       DateTime        @default(now()) @updatedAt
  tokenBlacklists TokenBlacklist[]
  sprint          Sprint[]
  news          News[]
  passwordResetToken PasswordResetToken[]
}

model PasswordResetToken {
  id        Int      @id @default(autoincrement())
  token     String   @unique
  userId    Int
  expiresAt DateTime
  user      User     @relation(fields: [userId], references: [id])

  @@index([userId])
}

model News {
  id                  Int             @id @default(autoincrement())
  type                String
  mods                String          @default("[]")
  rank                Int
  value               Int             
  createdAt           DateTime        @default(now())
  user                User            @relation(fields: [userId], references: [id])
  userId              Int
}

model TokenBlacklist {
  id        Int      @id @default(autoincrement())
  tokenJTI  String   @unique
  token     String
  expiresAt DateTime
  userId    Int
  user      User    @relation(fields: [userId], references: [id])
}

model Sprint {
  id                  Int             @id @default(autoincrement())
  submittedAt         DateTime        @default(now())
  user                User            @relation(fields: [userId], references: [id])
  userId              Int            
  mods                String          @default("[]")
  bubblesCleared      Int             
  bubblesShot         Int                
  bubblesPerSecond    Float           
  gameDuration        Int             
  highestBubbleClear  Int             
  wallBounces         Int             
  wallBounceClears    Int             
  highestCombo        Int             
  keysPressed         Int             
  keysPerSecond       Float           
  keysPerBubble       Float           
  angleChanged        Float           
  angleChangePerBubble  Float         
  holds               Int             
  bubbleClearToWin    Int             
  clear3              Int             @default(0)
  clear4              Int             @default(0)
  clear5              Int             @default(0)
  clear3wb            Int             @default(0)
  clear4wb            Int             @default(0)
  clear5wb            Int             @default(0)
}
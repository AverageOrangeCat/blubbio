datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id              Int             @id @default(autoincrement())
  username        String          @unique
  email           String          @unique
  password        String
  countryCode     String?
  country         String?
  pbUrl           String?         
  bannerUrl       String?          
  inputSettings   String?
  LastDisconnectedAt  DateTime?        
  createdAt       DateTime        @default(now())
  updatedAt       DateTime        @default(now()) @updatedAt
  tokenBlacklists TokenBlacklist[]
  sprint          Sprint[]
  news          News[]
  passwordResetToken PasswordResetToken[]
}

model PasswordResetToken {
  id        Int      @id @default(autoincrement())
  token     String   @unique
  userId    Int
  expiresAt DateTime
  user      User     @relation(fields: [userId], references: [id])

  @@index([userId])
}

model News {
  id                  Int             @id @default(autoincrement())
  type                String
  rank                Int
  value               Int             
  createdAt           DateTime        @default(now())
  user                User            @relation(fields: [userId], references: [id])
  userId              Int
}

model TokenBlacklist {
  id        Int      @id @default(autoincrement())
  tokenJTI  String   @unique
  token     String
  expiresAt DateTime
  userId    Int?
  user      User?    @relation(fields: [userId], references: [id])
}

model Sprint {
  id                  Int             @id @default(autoincrement())
  submittedAt         DateTime        @default(now())
  user                User?           @relation(fields: [userId], references: [id])
  userId              Int?            
  bubblesCleared      Int             @default(0)
  bubblesShot         Int             @default(0)   
  bubblesPerSecond    Float           @default(0)
  gameDuration        Int             @default(0)
  highestBubbleClear  Int             @default(0)
  wallBounces         Int             @default(0)
  wallBounceClears    Int             @default(0)
  highestCombo        Int             @default(0)
  keysPressed         Int             @default(0)
  keysPerSecond       Float           @default(0)
  keysPerBubble       Float           @default(0)
  angleChanged        Float           @default(0)
  angleChangePerBubble  Float         @default(0)
  holds               Int             @default(0)
  bubbleClearToWin    Int             @default(0)
  bubbleClearStats    String          @default("[]")  
}